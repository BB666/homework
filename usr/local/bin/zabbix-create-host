#!/usr/bin/env python

# Create host on Zabbix server and link it with template(s)

import socket
from pyzabbix import ZabbixAPI, ZabbixAPIException

templates_to_add = [ "Template OS Linux" ]
templates_to_add_server = [ "Template RabbitMQ Queue Depth", "Template App Zabbix Server" ]

# Get connection information from /etc/salt/minion
credentials = {}
for line in open('/etc/salt/minion','r'):
    if line.startswith('zabbix.'):
        credentials.update([line.strip().split(': ')])

zabbix_url = 'http://' + credentials['zabbix.server'] + '/zabbix'

zapi = ZabbixAPI(zabbix_url)
zapi.login(credentials['zabbix.user'], credentials['zabbix.password'])

host_to_add = socket.gethostname()
s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
s.connect((credentials['zabbix.server'], 0))
ip = s.getsockname()[0]

if ip == credentials['zabbix.server']:
        templates_to_add.extend(templates_to_add_server)

templates_ = []
_templates = zapi.template.get(filter={"host": templates_to_add})
if _templates:
    for template in _templates:
        templates_.append({"templateid": template["templateid"]})

    _host = zapi.host.get(filter={"host": host_to_add})
    if not _host:
        try:
            item = zapi.host.create(
                host = host_to_add,
                groups = [{"groupid": 2}],
                interfaces = [{"type": 1, "main": 1, "useip": 1, "ip": "%s" % ip, "dns": "", "port": 10050}],
                templates = templates_
            )
        except ZabbixAPIException as e:
                print(e)
                exit(1)
        print("Host %s has been created" % host_to_add)
    else:
        print("Host %s already exists" % host_to_add)
        exit(0)
else:
    print("Templates no found in DB")
    exit(1)
